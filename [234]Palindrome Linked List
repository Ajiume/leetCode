/**
	 * Palindrome Linked List 
	 * 
	 * Given a singly linked list, determine if it is a palindrome.
	 * 
	 * Follow up:
	 * 
	 * Could you do it in O(n) time and O(1) space?
	 * 
	 */
	 public class ListNode{
	    int val;
	    ListNode next;
	    ListNode(int x){
	        this.val = x;
	        this.next = null;
	    }
	 }
	 
	 public boolean isPalindrome(ListNode head){
	    ListNode slow = head;
	    ListNode fast = head;
	    Stack<Integer> stack = new Stack<Integer>();
	    while(fast != null && fast.next != null){
	        stack.push(slow.val);
	        slow = slow.next;
	        fast = fast.next.next;
	    }
	    if(fast != null){
	      slow = slow.next;
	    }
	    while(slow != null){
	       int top = stack.pop();
	       if(top != slow.val){
	          return false;
	       }
	       slow = slow.next;
	    }
      return true;	 
	 }
