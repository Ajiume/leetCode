/**
	 * Binary Tree Paths
	 * 
	 * Given a binary tree, return all root-to-leaf paths.
	 * 
	 * For example, given the following binary tree:
	 * 
	 * 		  1 
	 * 		 / \ 
	 * 	    2   3 
	 *		  \
	 *		   5 
	 * 
	 * 
	 * All root-to-leaf paths are:
	 * 
	 * ["1->2->5", "1->3"] 
	 * 
	 * 
	 * Credits: Special thanks to @jianchao.li.fighter for
	 * adding this problem and creating all test cases.
	 * 
	 * 
	 */
	 public class TreeNode{
	    int val;
	    TreeNode left, right;
	    TreeNode(int x){
	        this.val = x;
	        this.left = this.right = null;
	    }
	 }
	 
	 public List<String> binaryTreePaths(TreeNode root){
	        List<String> list = new ArrayList<String>();
	        if(root == null){
	            return list;
	        }
	        getPath(root, "", list);
	        return list;
	 }
	 
	 private void getPath(TreeNode root, String str, List<String> list){
	        str = str + String.valueOf(root.val);
	        if(root.left != null){
	            getPath(root.left, str + "->", list);
	        }
	        if(root.right != null){
	            getPath(root.right, str + "->", list);
	        }
	        if(root.left == null && root.right == null){
	            list.add(str);
	        }
	          
	 }
	 
	 
	 
