/**
	 * 
	 * Reverse a singly linked list.
	 * 
	 * Hint: 
	 * A linked list can be reversed either iteratively or recursively.
	 * Could you implement both?
	 * 
	 */
	 /**
	 *
	 *Solution 1 
	 */
	 public class ListNode{
	    int val;
	    ListNode next;
	    ListNode(int x){
	      this.val = x;
	      this.next = null;
	    }
	 }
	 
	 public ListNode reverseList(ListNode head){
	    ListNode dummy = new ListNode(0);
	    dummy.next = head;
	    
	    ListNode prev = dummy;
	    ListNode current = head;
	    while(current != null && current.next != null){
	        ListNode temp = current.next.next;
	        current.next.next = prev.next;
	        prev.next = current.next;
	        current.next = temp;
	    }
	    return dummy.next;
	 }
	 
	 /**
	 *
	 *Solution 2  
	 */
	 public ListNode reverseList(ListNode head){
	      if(head == null || head.next == null){
	          return head;
	      }
	      ListNode restStart = head.next;
	      head.next = null;
	      ListNode restEnd = reverseList(restStart);
	      restStart.next = head;
	      return restEnd;
	 }
	 
	 
