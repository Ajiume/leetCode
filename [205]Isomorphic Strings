/**
	 * Isomorphic Strings
	 * 
	 * Given two strings s and t, determine if they are isomorphic.
	 * 
	 * Two strings are isomorphic if the characters in s can be replaced to get
	 * t.
	 * 
	 * All occurrences of a character must be replaced with another character
	 * while preserving the order of characters. No two characters may map to
	 * the same character but a character may map to itself.
	 * 
	 * For example, 
	 * 
	 * Given "egg", "add", return true.
	 * 
	 * Given "foo", "bar", return false.
	 * 
	 * Given "paper", "title", return true.
	 * 
	 * Note: You may assume both s and t have the same length.
	 * 
	 */
	 public boolean isIsomorphic(String s, String t){
	      int n = s.length(), nt = t.length();
	      if(n != nt){
	          return false;
	      }
	      
	      HashMap<Character, Character> map = new HashMap<Character, Character>();
	      for(int i=0;i<n;i++){
	          int cs = s.charAt(i), ct = t.charAt(i);
	          if(!map.containsKey(cs)){
	              map.put(cs, ct);
	          }
	          else if(map.get(cs) != ct){
	              return false;
	          }
	      }
	      
	      map.clear();
	      for(int i=0; i<n; i++){
	        char cs = s.charAt(i), ct = t.charAt(i);
	        if(!map.containsKey(ct)){
	            map.put(ct,cs);
	        }
	        else if(map.get(ct) != cs){
	            return false;
	        }
	      }
	      return true;
	 }
	 
	 
	 
