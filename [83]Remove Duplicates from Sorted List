/**
	 * Remove Duplicates from Sorted List
	 * 
	 * Given a sorted linked list, delete all duplicates such that each element
	 * appear only once.
	 * 
	 * For example,
	 * 
	 * Given 1->1->2, return 1->2. 
	 * 
	 * Given 1->1->2->3->3, return 1->2->3.
	 * 
	 * 
	 */
	 
	 public class ListNode{
	    int val;
	    ListNode next;
	    ListNode(int x){
	        this.val = x;
	        this.next = null;
	    }
	 }
	 /**
	 *Solution 1
	 */
	 public ListNode deleteDuplicates(ListNode head){
	    ListNode dummy = new ListNode(0);
	    dummy.next = head;
	    ListNode prev = dummy;
	    ListNode current = head;
	    while(current != null && current.next != null){
	        if(current.val == current.next.val){
	            prev.next = current.next;
	        }else{
	            prev = current;
	        }
	        current = current.next;
	    }
	    return dummy.next;
	 }
	 /////////////////////////////////////////////////////////////////////////////////
	 /**
	 *Solution 2
	 */
	 public ListNode deleteDuplicates(ListNode head){
	    if(head == null){
	        return head;
	    }
	    ListNode current = head;
	    while(current.next != null){
	        if(current.val == current.next.val){
	            current.next = current.next.next;
	        }else{
	            current = current.next;
	        }
	    }
	    return head;
	 }
	 
	 
	 
	 
	 
